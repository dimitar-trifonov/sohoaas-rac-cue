services:
  # MCP Service - OAuth2 and Google Workspace API proxy
  mcp-service:
    build:
      context: ./mcp/server/backend
      dockerfile: Dockerfile
    container_name: sohoaas-mcp
    ports:
      - "${MCP_PORT:-8080}:8080"
    environment:
      - PORT=${MCP_PORT:-8080}
      - NODE_ENV=${MCP_NODE_ENV:-production}
      - MCP_SERVICE_NAME=${MCP_SERVICE_NAME:-google-workspace}
      - LOG_LEVEL=${MCP_LOG_LEVEL:-info}
      - GOOGLE_CLIENT_ID=${MCP_GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${MCP_GOOGLE_CLIENT_SECRET}
      - OAUTH_REDIRECT_URL=${MCP_OAUTH_REDIRECT_URL:-http://localhost:3000/api/auth/callback}
      - FRONTEND_URL=${MCP_FRONTEND_URL:-http://localhost:3000}
    volumes:
      # Mount .env file if it exists (for local development)
      - ./mcp/server/.env:/app/.env:ro
      # Persistent storage for MCP data
      - mcp-data:/app/data
    networks:
      - sohoaas-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

  # SOHOAAS Backend - 5-agent workflow automation
  sohoaas-backend:
    build:
      context: .
      dockerfile: ./app/backend/Dockerfile
    container_name: sohoaas-backend
    ports:
      - "${SOHOAAS_PORT:-8081}:8081"
    environment:
      - PORT=${SOHOAAS_PORT:-8081}
      - GIN_MODE=${SOHOAAS_GIN_MODE:-release}
      - MCP_SERVICE_URL=${SOHOAAS_MCP_SERVICE_URL:-http://mcp-service:8080}
      - OPENAI_API_KEY=${SOHOAAS_OPENAI_API_KEY}
      - GOOGLE_API_KEY=${SOHOAAS_GOOGLE_API_KEY}
      - GENKIT_ENV=${SOHOAAS_GENKIT_ENV:-production}
      - GENKIT_REFLECTION_PORT=${SOHOAAS_GENKIT_REFLECTION_PORT:-3101}
      - LOG_LEVEL=${SOHOAAS_LOG_LEVEL:-info}
      - ENVIRONMENT=${SOHOAAS_ENVIRONMENT:-production}
      - MCP_AUTH_ENDPOINT=${SOHOAAS_MCP_AUTH_ENDPOINT:-/api/auth/token}
      - ARTIFACT_OUTPUT_DIR=${SOHOAAS_ARTIFACT_OUTPUT_DIR:-./generated_workflows}
      - RAC_CONTEXT_PATH=${SOHOAAS_RAC_CONTEXT_PATH:-./rac}
      # Workflow Storage Configuration
      - STORAGE_BACKEND=${SOHOAAS_STORAGE_BACKEND:-local}
      - WORKFLOWS_DIR=${SOHOAAS_WORKFLOWS_DIR:-./generated_workflows}
      # Google Cloud Storage (when STORAGE_BACKEND=gcs)
      #- STORAGE_BACKEND=${SOHOAAS_STORAGE_BACKEND:-gcs}
      - GCS_BUCKET_NAME=${SOHOAAS_GCS_BUCKET_NAME:-sohoaas-workflows}
      - GCS_PROJECT_ID=${SOHOAAS_GCS_PROJECT_ID}
      - GCS_SERVICE_ACCOUNT_KEY=${SOHOAAS_GCS_SERVICE_ACCOUNT_KEY}
      - GCS_WORKFLOWS_PREFIX=${SOHOAAS_GCS_WORKFLOWS_PREFIX:-workflows/}
      # Firebase Authentication Environment Variables
      - FIREBASE_PROJECT_ID=${SOHOAAS_FIREBASE_PROJECT_ID}
      - FIREBASE_PRIVATE_KEY_ID=${SOHOAAS_FIREBASE_PRIVATE_KEY_ID}
      - FIREBASE_PRIVATE_KEY=${SOHOAAS_FIREBASE_PRIVATE_KEY}
      - FIREBASE_CLIENT_EMAIL=${SOHOAAS_FIREBASE_CLIENT_EMAIL}
      - FIREBASE_CLIENT_ID=${SOHOAAS_FIREBASE_CLIENT_ID}
      - FIREBASE_AUTH_URI=${SOHOAAS_FIREBASE_AUTH_URI:-https://accounts.google.com/o/oauth2/auth}
      - FIREBASE_TOKEN_URI=${SOHOAAS_FIREBASE_TOKEN_URI:-https://oauth2.googleapis.com/token}
      - FIREBASE_AUTH_PROVIDER_X509_CERT_URL=${SOHOAAS_FIREBASE_AUTH_PROVIDER_X509_CERT_URL:-https://www.googleapis.com/oauth2/v1/certs}
      - FIREBASE_CLIENT_X509_CERT_URL=${SOHOAAS_FIREBASE_CLIENT_X509_CERT_URL}
      - FIREBASE_UNIVERSE_DOMAIN=${SOHOAAS_FIREBASE_UNIVERSE_DOMAIN:-googleapis.com}
      # Email Access Control: Now handled via Firebase Console user management
      # No environment variables needed
    volumes:
      # Persistent storage for workflows and user data
      - ./generated_workflows:/app/generated_workflows
      - sohoaas-logs:/app/logs
      # Mount RaC context files for Requirements-as-Code specifications
      - ./rac:/app/rac:ro
    depends_on:
      mcp-service:
        condition: service_healthy
    networks:
      - sohoaas-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # SOHOAAS Frontend - React app with nginx proxy
  sohoaas-frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    container_name: sohoaas-frontend
    ports:
      - "${SOHOAAS_NGINX_PORT:-3000}:3000"
    environment:
      - NGINX_PORT=${SOHOAAS_NGINX_PORT:-3000}
      - MCP_SERVICE_URL=${SOHOAAS_MCP_SERVICE_URL:-http://mcp-service:8080}
      - BACKEND_SERVICE_URL=${SOHOAAS_BACKEND_SERVICE_URL:-http://sohoaas-backend:8081}
      # Frontend Firebase Configuration
      - VITE_FIREBASE_API_KEY=${SOHOAAS_VITE_FIREBASE_API_KEY}
      - VITE_FIREBASE_AUTH_DOMAIN=${SOHOAAS_VITE_FIREBASE_AUTH_DOMAIN:-sohoaas-dev.firebaseapp.com}
      - VITE_FIREBASE_PROJECT_ID=${SOHOAAS_VITE_FIREBASE_PROJECT_ID:-sohoaas-dev}
      - VITE_FIREBASE_STORAGE_BUCKET=${SOHOAAS_VITE_FIREBASE_STORAGE_BUCKET:-sohoaas-dev.appspot.com}
      - VITE_FIREBASE_MESSAGING_SENDER_ID=${SOHOAAS_VITE_FIREBASE_MESSAGING_SENDER_ID}
      - VITE_FIREBASE_APP_ID=${SOHOAAS_VITE_FIREBASE_APP_ID}
      # Backend URL for secure token management
      - VITE_BACKEND_URL=${SOHOAAS_VITE_BACKEND_URL:-http://sohoaas-backend:8081}
      # Email Access Control: Now handled via Firebase Console user management
    depends_on:
      mcp-service:
        condition: service_healthy
      sohoaas-backend:
        condition: service_healthy
    networks:
      - sohoaas-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  sohoaas-network:
    driver: bridge
    name: sohoaas-network

volumes:
  # Persistent storage for MCP service data
  mcp-data:
    driver: local
    name: sohoaas-mcp-data
  
  # Persistent storage for SOHOAAS workflows
  sohoaas-workflows:
    driver: local
    name: sohoaas-workflows
  
  # Persistent storage for SOHOAAS logs
  sohoaas-logs:
    driver: local
    name: sohoaas-logs
